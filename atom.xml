<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[黑皮窝]]></title>
  <link href="http://www.lovelin.info/atom.xml" rel="self"/>
  <link href="http://www.lovelin.info/"/>
  <updated>2013-04-18T10:36:29+08:00</updated>
  <id>http://www.lovelin.info/</id>
  <author>
    <name><![CDATA[gaojian]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[将raspberry pi目录备份到dropbox]]></title>
    <link href="http://www.lovelin.info/blog/2013/04/16/jiang-raspberry-pimu-lu-bei-fen-dao-dropbox/"/>
    <updated>2013-04-16T14:14:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2013/04/16/jiang-raspberry-pimu-lu-bei-fen-dao-dropbox</id>
    <content type="html"><![CDATA[<p>上个周raspberry pi突然就无法引导启动了,看了dmesg的信息，大概是我修改了fstab文件引起的。所幸上面的文件我都rsync过一份到我的mac上，所以干脆重装os。</p>

<p>但这个事情教育我们backup很重要，我决定保险一点，让raspberry pi定时自动做backup，并将backup文件放到dropbox上.步骤有</p>

<h3>打包指定的目录</h3>

<p><code>
tar czvf xx.tar.gz ~/xxx
</code> <br/>
我只备份了重要的目录， 如果想backup整个系统，可能需要 <br/>
<code>
cd / <br/>
sudo tar czvfp xxx.tar.gz --exclude=/proc --exclude=/lost+found --exclude=/backup.tgz --exclude=/mnt --exclude=/sys /
</code></p>

<h3>上传打包文件至dropbox</h3>

<p>懒得再研究dropbox的API了，此处我使用了开源的<a href="https://github.com/andreafabrizi/Dropbox-Uploader">dropbox_uploader</a> ,github上的README很详尽,我需要做的是在dropbox上新建一个app,并取得api key和app secret即可</p>

<p>将上面两步用脚本包装一下,脚本如下</p>

<script src="https://gist.github.com/assassingj/5393859.js"></script>


<h3>定时执行</h3>

<p>这个借助crontab非常简单,crontab新建一条任务
<code>
0 12 * * * /home/pi/backup.sh
</code></p>

<p>于是，每天12点就会自动backup目录并上传至dropbox上了,也不用担心哪天忘记rsync</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tmux 下无法自定义encoding的解决方案]]></title>
    <link href="http://www.lovelin.info/blog/2013/04/16/tmux-xia-wu-fa-zi-ding-yi-encodingde-jie-jue-fang-an/"/>
    <updated>2013-04-16T10:56:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2013/04/16/tmux-xia-wu-fa-zi-ding-yi-encodingde-jie-jue-fang-an</id>
    <content type="html"><![CDATA[<p>之前在国际站，使用utf-8是非常自然的事情,甚至无论中美所有服务器时区也按照标准的USA来设。到了ALIPAY后，everything changed&#8230; 代码，日志文件很统一地用了GBK编码,于是出现了tmux无法应付的场景..</p>

<p>开始我用iterm2新建了一套profile,初始化时指定character encoding为gb2312,可以满足需求，昨天将其改为luit了,这样不用新开tab</p>

<p>实施<a href="http://invisible-island.net/luit/">luit</a>非常简单，唯一需要注意的是mac lion下可能会出现</p>

<blockquote><p>couldn&#8217;t copy terminal setting</p></blockquote>

<p>这样的error, 我download了luit的最新源码，自己compile出来是没这个问题的,在.zshrc中加入alias
<code></p>

<pre><code>alias ssh2server='luit -encoding gbk ssh xxx@shterm.xxx.net'
</code></pre>

<p></code></p>

<p>以后上线上服务器直接ssh2server吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[golang写个简单的cmus歌词插件]]></title>
    <link href="http://www.lovelin.info/blog/2013/04/11/golangxie-ge-jian-dan-de-cmusge-ci-cha-jian/"/>
    <updated>2013-04-11T21:53:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2013/04/11/golangxie-ge-jian-dan-de-cmusge-ci-cha-jian</id>
    <content type="html"><![CDATA[<p>一直用cmus听歌，终于发现有时候想看看歌词，但cmus下没有合适的插件，所以自己先写个最最简单的，后续有兴趣的时候可以改进
目前已实现：</p>

<ol>
<li>检测cmus运行状态</li>
<li>获取cmus当时正在play的歌曲meta信息</li>
<li>根据歌手和歌曲名去歌词服务器query歌词,用的是geci.me 这个API</li>
<li>打印第一匹配的歌词</li>
</ol>


<p>待实现:</p>

<ol>
<li>终端下的termbox</li>
<li>同一首歌的cache</li>
<li>自主search 选择歌词</li>
<li>歌词滚动？？</li>
<li>&#8230;</li>
</ol>


<script src="https://gist.github.com/assassingj/5363551.js"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[此去经年]]></title>
    <link href="http://www.lovelin.info/blog/2013/03/17/ci-qu-jing-nian/"/>
    <updated>2013-03-17T14:37:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2013/03/17/ci-qu-jing-nian</id>
    <content type="html"><![CDATA[<p>又是一年。春节时又回到了常德桃源,刚刚走到爷爷的坟前还没来得及祭坟，就看到年前腿被撞骨折了的奶奶拄着拐杖在等候，所谓的&#8221;野老念牧童，倚杖候柴扉&#8221;的情景大概也不过如此。</p>

<p>和老婆走到昔日童年的乐园而今满是杂草的老家遗址, 我指着对面山岗对她说, 小时候每次爸爸回来,开的车就停在那条路上。吃完晚饭, 二叔从电脑里找出了已经泛黄然后翻拍的老照片，照片上的很多像妈妈那样的年青人都已经老去，而当时被抱在各自妈妈怀里的像我这样的小屁孩，则领着各自的另一半回来拜访，在这过程中经历了坐车从免票，到半票，到全票的过程,直至准备培养免票的下一代，这让我联想到数学中的圆，计算机中的while， 佛教的轮回，道家的五行，质量管理的PDCA，自然界的生态系统。。。</p>

<p>春节结束后又回到繁忙的项目室。每次都说当前是困难时期艰辛环境，却也不见自己有半点龙场悟道的迹象。去年对老大说，我会改变我能改变的，也会接受我不能改变的。这句话说出来很简单，但关键的point是需要足够的智慧分辨哪些是我能改变的，哪些是我改变不了的，哪些是我应该改变的，哪些是我不应该改变的。</p>

<p>家庭，工作，老婆,小孩，未来发展? 每次总能找到这样那样的借口说先做完当下，却不记得曾国藩说&#8221;负薪牧豕皆可读书&#8221;, 无名氏说&#8221;心中若有桃花源, 何处不是水云间?&#8221; ，其实该想想自己真正想要的是什么，然后坚定不移地走过去。</p>

<p>我发现我很多观点都和Paul Graham相似：一样的不喜欢静态类型，哪怕现在的工作语言是JAVA，但私下对python,shell流更感兴趣；想做一份day job，把晚上的时间留给自己，无论是研究下怎么把HMM和微信整合到raspberry pi或是和家人一起看场电影。我有很多想法，但大部分只有三分钟热度，没有给自己留下足够的时间，这完全不符合hack ethic第一条：</p>

<blockquote><p>Always yield to the Hands-On Imperative</p></blockquote>

<p>新的一年，对自己新的期望。一期保持心态，日拱一卒； 二期了断因果，尘埃落定。对《想飞的钢琴少年》中爷爷把帽子扔向河对岸的场景印象特别深刻，伴随的台词是“如果下不了决定，就得先舍弃一些东西”。“此去经年，应是良辰好景”，后面的不说了，不吉利。</p>

<p>以上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[shell版的下妹子图]]></title>
    <link href="http://www.lovelin.info/blog/2013/01/22/shellban-de-xia-mei-zi-tu/"/>
    <updated>2013-01-22T00:43:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2013/01/22/shellban-de-xia-mei-zi-tu</id>
    <content type="html"><![CDATA[<p>在osc上看到一篇python写的<a href="http://www.oschina.net/code/snippet_13769_17481" title="下妹子图">下妹子图</a>,试着改为一句shell,效果很不错:
<code>
for i in {1..700}; do curl -q "http://jandan.net/ooxx/page-$i#comments" 2>/dev/null| grep 'img src=.*.jpg.*' | sed 's/.*img src="(.*.jpg).*$/\1/' | xargs wget --timeout=5; done
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tmux使用心得小记]]></title>
    <link href="http://www.lovelin.info/blog/2012/10/25/tmuxshi-yong-xin-de-xiao-ji/"/>
    <updated>2012-10-25T13:55:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/10/25/tmuxshi-yong-xin-de-xiao-ji</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>有大屏幕后不用终端复用软件来提高效率简直就是暴殄天物, 之前一直用的是terminator终端来完成这个功能,但有一些局限性:</p>

<pre><code>1.mac下没有terminator,虽然有iterm之类替代,但非吾所愿,我要的是通用解决方案
2.和X做了绑定, 纯命令行下无法使用terminator
</code></pre>

<p>tmux与GNU screen类似,但是来自openbsd, 使用它最直接的用处是可以切屏,当然好处远不止于此.下面是tmux的一些feature:</p>

<ul>
<li>A powerful, consistent, well-documented and easily scriptable command interface.</li>
<li>A window may be split horizontally and vertically into panes.</li>
<li>Panes can be freely moved and resized, or arranged into preset layouts.</li>
<li>Support for UTF-8 and 256-colour terminals.</li>
<li>Copy and paste with multiple buffers.</li>
<li>Interactive menus to select windows, sessions or clients.</li>
<li>Change the current window by searching for text in the target.</li>
<li>Terminal locking, manually or after a timeout.</li>
<li>A clean, easily extended, BSD-licensed codebase, under active development.</li>
</ul>


<h2>安装</h2>

<p>tmux的安装非常简单,ubuntu下 <br/>
<code>sudo aptitude install tmux</code><br/>
mac下ports或者brew都可以直接install,以brew为例<br/>
<code>sudo brew install tmux</code> <br/>
想自己编译可以从<a href="http://tmux.sourceforge.net/" title="tmux web">官网</a> download源码</p>

<h2>基本用法</h2>

<p>最好的办法man,openbsd上也提供了一份<a href="http://www.openbsd.org/cgi-bin/man.cgi?query=tmux&amp;sektion=1" title="manual page">手册</a>
开启一个终端, 输入tmux命令. 基本上所有的操作都需要先按下prefix键(默认是ctrl+b),
比如<br/>
1. 水平分割一个pane,先ctrl+b,再双引号<br/>
2. 垂直分割一个pane,先ctrl+b, 再百分号<br/>
3. 脱离当前会话,ctrl+b后 d, 此处的脱离是暂时离开,实际当前所有的工作场景都是保留的,并且在后台持续运行,后续可以通过tmux attach重新接入进来,有点nohup的感觉,所以你可以今天SSH上某台服务器,开个tmux,跑某个任务,然后注销这次SSH,明天再SSH上来attach上次的会话,看看任务是否跑完</p>

<p>不习惯看英文的同学<a href="https://wiki.freebsdchina.org/software/t/tmux">此处</a>有一些基本的中文操作手册</p>

<h2>个性化折腾</h2>

<p>生命不息,折腾不止.自己定制的才是最适合自己的,如此强大的工具要慢慢挖掘
1. 改prefix键, ctrl+b没手感,改为ctrl+h
修改~/.tmux.conf(如果没有则新建一个),新增如下内容:<br/>
<code>
set -g prefix C-h
unbind-key C-b
</code></p>

<ol>
<li><p>启动shell时自动进入tmux, 如果没有会话则新建一个,有则直接attach
在.zshrc(bash用户可能是.bashrc)的最后加入tmux就直接启动了,但要做些逻辑判断
最后的脚本如下:<br/>
<code>
test -z "$TMUX" &amp;&amp; (tmux attach || tmux new-session)
</code></p></li>
<li><p>定制状态栏, 想在状态栏上加点自己随时感兴趣的东西
因为是动态IP,平常时不时会要ifconfig一下,于是将IP固定显示在状态栏左边<br/>
<code>
set -g status-left-ength 21
set -g status-left "#[bg=green,fg=white,bold]#(ifconfig | grep -A1 eth0 | tail -1 | awk '{print $2}' | awk -F: '{print $2}')"
</code>
开发的机器经常高load,可以将load放到状态栏右边,成天对着黑白terminal,怕忘记时间再在状态栏加上时间显示(一分钟refresh一次)<br/>
<code>
set -g status-right "#[bg=green,fg=white,bold]#(cut -d ' ' -f 1-3 /proc/loadavg) ● #[bg=green,fg=white,bold]#(date +%H:%M)"
set -g status-interval 60
</code>
(其实在tmux中, 按下prefix键后 加t 会有个全屏的时钟出来)</p></li>
<li><p>启动时初始化窗口
想骚包吗？想假装高手吗，想打开tmux就自动就分N个窗口吗？
在shell启动脚本中加入这些(替换之前的自启动脚本)</p></li>
</ol>


<script src="https://gist.github.com/4058032.js?file=tmux-init.sh"></script>


<p>使用以上脚本会开两个window，并把第2个window分割成3份，最上面跑着htop,左边有个vim，右边一个dstat，效果如下图 <br/>
<a href="http://www.flickr.com/photos/85525219@N04/8178078344/" title="all by 爱琳说, on Flickr"><img src="http://farm9.staticflickr.com/8488/8178078344_8c8ce9f1a5.jpg" width="500" height="313" alt="all"></a> <br/>
具体需要启动什么，启动几个窗口，分割分几个pane, 都可以修改脚本定制</p>

<ol>
<li>多pane同步
连了好几台服务器，想同时执行相同的命令，同时观察结果吗？在按下prefix键后按冒号进入command模式
输入 <br/>
<code>
setw synchronize-panes
</code> <br/>
你输入的命令将在所有pane中出现执行 <br/>
<a href="http://www.flickr.com/photos/85525219@N04/8178095816/" title="syn-pane by 爱琳说, on Flickr"><img src="http://farm9.staticflickr.com/8486/8178095816_1841eca896.jpg" width="500" height="313" alt="syn-pane"></a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[实现ip地址自动上传过程分析]]></title>
    <link href="http://www.lovelin.info/blog/2012/10/22/e5ae9ee78eb0ipe59cb0e59d80e887aae58aa8e4b88ae4bca0e8bf87e7a88be58886e69e90/"/>
    <updated>2012-10-22T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/10/22/e5ae9ee78eb0ipe59cb0e59d80e887aae58aa8e4b88ae4bca0e8bf87e7a88be58886e69e90</id>
    <content type="html"><![CDATA[<p><p>不像大学那会，想买台赛扬CPU没独显也无所谓的台式机的小小愿望都无法实现，工作了的同学很多时候有好几台电脑。公司一台，家里一台，或者公司台式机一台，笔记本一台。如果想从A电脑SSH到B电脑，而B电脑又是DHCP的居无定所（没有固定IP），那么就需要B自己告诉我们IP地址。</p>
<p>要达成目标我们需要做三件事情：</p>
<ol>
<li>在某些时刻B电脑找出本机IP地址</li>
<li>.upload这一IP到一个公共空间</li>
<li>A电脑获取这一IP</li>
</ol>
<h3>分析</h3>
<p>第1点，在linux上找出本机IP方法是很多的，在ifconfig后用grep, cut, awk, sed等处理下就好，关键在于何时运行呢？有两种方法：一种是借助cron工具定时去执行,一种是在网络环境发生变化时触发执行，有点像select与epoll的区别。如果以去银行排队办业务为例来说，前者就像是每2分钟去柜台问下可不可以为我办了，后者则是在大厅经理那拿一个注册号码，轮到你了就广播叫你,显然后者的机制会有效率且实时.</p>
<p>ubuntu下可借助/etc/network/if-up.d这个文件夹, 在网络接口起来后会执行该文件夹下面所有可执行的脚本（与/etc/rcx.d类似,不过触发时间点一个是在系统启动时一个是在网络接口准备好时），所以我们可以将采集IP的脚本扔到这个文件夹下，这样当网络有变化时会自动执行了</p>
<p>mac下稍微麻烦点, 先借助scutil看看我们关心的网络变化这个点在系统中是如何注册的,我关心的是ipv4的变化(也可以是你关心的具体某个网络接口的state (如: subKey [54] = State:/Network/Interface/en1/IPv4)</p>
<p><a title="View 'scutil2' on Flickr.com" href="http://www.flickr.com/photos/85525219@N04/8112241063"><img title="scutil2" src="http://farm9.staticflickr.com/8333/8112241063_895c69c804.jpg" alt="scutil2" width="500" height="223" border="0" /></a></p>
<p>当我们的网络接口发生变化时,就可以根据这个key来监控了(如下为停止无线和启用无线触发的)</p>
<p><a title="View 'watch' on Flickr.com" href="http://www.flickr.com/photos/85525219@N04/8112258368"><img title="watch" src="http://farm9.staticflickr.com/8050/8112258368_1d9c3d882e.jpg" alt="watch" width="500" height="149" border="0" /></a></p>
<p>要做到全自动,可以借助python+SystemConfiguration,脚本如下(获取IP部分可自由修改,甚至用shell等其他方式实现,我们需要的只是trigger这个动作)
<script src="https://gist.github.com/3931024.js?file=network.py"></script>
</p>
<p>第2点，可选的很多. ftp, 个人空间, github等等</p>
<p>以github为例,可以将新的IP push到repository中,这样其他需要查看该IP的机器pull一下就可以获得最新的IP</p></p>

<p><p>第3点 简单的办法就是轮询了,还是以github为例,定时pull最新的版本下来就OK了,不过会有一定的延时(你不会配置一个cron 每秒扫描一次网络吧??), 能想到的实时的方案就是借助自己的VPS, 以VPS为中介服务器,A电脑通过socket到VPS上, B电脑在获取到新的IP后将IP推送到VPS上(可以开socket,也可以直接rsync,由VPS的inotify-tools监控文件变化),VPS服务器收到新IP后发送IP给A电脑, 并触发事件(借助这个事件我们可以做一些更新的动作,比如A电脑绑定了hosts文件的可以重写hosts文件)</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mac升级至10.8后mail rss的转移]]></title>
    <link href="http://www.lovelin.info/blog/2012/10/08/mace58d87e7baa7e887b3108e5908emailrsse79a84e8bdace7a7bb/"/>
    <updated>2012-10-08T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/10/08/mace58d87e7baa7e887b3108e5908emailrsse79a84e8bdace7a7bb</id>
    <content type="html"><![CDATA[<p><p>升级至mountain lion后，猛的发现原来mail中订阅的rss全部不翼而飞，查阅资料后才知道新版mail不再支持rss了，所以需要将原来订阅好的rss转移下，这次下定决心全部挪到google reader中去，再用chrome plugin或者其他客户端来看，这样以后都不用担心丢失。</p>
<p>做成这件事情需要两步：</p>
<p>   1.找到我之前订阅的rss feed 列表</p>
<p>   2.把列表中的feed全部subscribe到google reader中</p>
<p>如果只是想找出feed列表是相当简单的，试过几次后发现，运行如下command就可以了：</p>
<p><code>find ~/Library/Mail/V2/RSS/ -name "Info.plist" |xargs -I{}  grep -A 1 Feed {} | grep string | awk -F'[&lt;&gt;]' '{print $3}'</code></p>
<p><a title="View 'rsslist' on Flickr.com" href="http://www.flickr.com/photos/85525219@N04/8066566462"><img title="rsslist" src="http://farm9.staticflickr.com/8031/8066566462_55ace23441.jpg" alt="rsslist" width="500" height="408" border="0" /></a></p>
<p>如果需要将其自动import到google reader中，还需要用reader提供的api干点额外的活，我参考的api接口如下：</p>
<p><a href="http://code.google.com/p/r2-release/wiki/GoogleReaderApi#google_reader_api_%E4%BB%8B%E7%BB%8D">http://code.google.com/p/r2-release/wiki/GoogleReaderApi#google_reader_api_介绍</a></p>
<p>要订阅feed，需要如下几步:</p>
<ul>
<li>获取google auth</li>
<li>获取token</li>
<li>订阅指定的feed</li>
</ul>
<p>连带之前的找feed列表的功能，脚本如下
<script src="https://gist.github.com/3863977.js?file=rssmail2reader.py"></script></p>

<p>完整版(其实就是加上README)放在 <a href="https://github.com/assassingj/mailrss2google">https://github.com/assassingj/mailrss2google</a>中</p>
<p>执行
<code>python rsstranfer.py peng.gaojian@gmail.com</code>输入密码就OK了<br />
完成后再访问google reader,之前的订阅全回来了～<a title="View 'google reader' on Flickr.com" href="http://www.flickr.com/photos/85525219@N04/8066506348"><img title="google reader" src="http://farm9.staticflickr.com/8179/8066506348_f9003e9d5e.jpg" alt="google reader" width="500" height="203" border="0" /></a></p>
<p> </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[破VPN引发的网络问题]]></title>
    <link href="http://www.lovelin.info/blog/2012/05/26/e7a0b4vpne5bc95e58f91e79a84e7bd91e7bb9ce997aee9a298/"/>
    <updated>2012-05-26T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/05/26/e7a0b4vpne5bc95e58f91e79a84e7bd91e7bb9ce997aee9a298</id>
    <content type="html"><![CDATA[<p><p>上个周末在家用VPN连上公司网络来写项目周报，公司的VPN系统会根据浏览器和操作系统来使用不同的VPN client. 很遗憾 mac下居然用的是一个applet，千辛万苦装上后能用了，中途出现CPU飙高的情况，我忍了，发完周报就把APPLET所在的网页关掉了，噩梦来了。</p>
<p> </p>
<p>上外网不能用了，ifconfig下出现两个VNIC的虚拟网卡且status为active。</p>
<p><img title="Screen Shot 2012-05-26 at 10.47.14 AM.png" src="http://www.lovelin.info/wp-content/uploads/2012/05/Screen-Shot-2012-05-26-at-10.47.14-AM.png" alt="Screen Shot 2012 05 26 at 10 47 14 AM" width="557" height="312" border="0" /></p>
<p>mtr 所有的外网域名都不通，只能ping 通自己的路由器192.168.1.1, 打印route table如下：</p>
<p><img title="Screen Shot 2012-05-26 at 10.13.18 AM.png" src="http://www.lovelin.info/wp-content/uploads/2012/05/Screen-Shot-2012-05-26-at-10.13.18-AM.png" alt="Screen Shot 2012 05 26 at 10 13 18 AM" width="600" height="248" border="0" /></p>
<p>按道理应该能ping通才对，换了个IPping了下，果然通了，断定为DNS解析的问题</p>
<p>打开网络设置，果然看到了DNS server被换成了公司的几个内网IP，于是加上一条192.168.1.1并置顶，OK了</p>
<p><img title="dns.jpg" src="http://www.lovelin.info/wp-content/uploads/2012/05/dns.jpg" alt="Dns" width="600" height="508" border="0" /></p>
<p>顺便鄙视下arraynetworks的mac VPN client</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[那七年，我们一起（    ）]]></title>
    <link href="http://www.lovelin.info/blog/2012/05/20/e982a3e4b883e5b9b4efbc8ce68891e4bbace4b880e8b5b7efbc88efbc89/"/>
    <updated>2012-05-20T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/05/20/e982a3e4b883e5b9b4efbc8ce68891e4bbace4b880e8b5b7efbc88efbc89</id>
    <content type="html"><![CDATA[<p><div style="font-size: 15px;">
<p><!--?xml version="1.0" encoding="UTF-8" standalone="no"?--></p>
<div style="font-family: Arial;"><br />
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;已是2012孟夏。每天路过钱塘江， 每每想起老用“迎着新世纪的曙光”做为立志结尾的身为祖国花朵的小学时垂鬓的我和现在终日奔波劳累已长为一朵奇葩的现在黄发的我，逝者如斯，白驹过隙。</p>
</div>
<div style="font-family: Arial;">
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;05年，仲夏，6月2日，从那时起我不再是孤独一人，我很清楚地记得那是一个星期四的下午，连姜大的软件课我也没去听。很尴尬，title上的空格不知如何填充，我竟总结不出一个色彩或绚丽或灰暗的词来形容那七年，游扬州时那盆景上的“清风徐来，水波不兴”八个字莫名在脑袋里飘荡起来。一潭死水是否是我最真实的写照？</p>
</div>
<div style="font-family: Arial;">
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;那位叠伞都要一丝不苟叠得整整齐齐，挤牙膏强制约束从后往前推的带有轻微强迫症状的女子，没能从我的生活中逃离，结了发，继续陪伴我IT技术男的苦难人生，并每天精打细算过日子。恍惚间想起东坡同学的“归而谋诸妇。妇曰:&#8217;我有斗酒，藏之久矣，以待子不时之需‘”，仿佛不知道什么时间，我说买房还缺50万，她就会拿出来一张50万的存折一样。只可惜我们活在2012的当下。东坡的那举那动是为与友泛舟游玩，书卷气骚人气扑面而来，而我们则撇不开阿堵物孔方兄铜臭气，撇不开生活的压力。我们不能武侠小说中一样，看到客栈只需大摇大摆走进去，吆喝一声“小二，5斤牛肉，再来5斤上好女儿红”，全然不用farm。每天清晨经过龙井，如果只需欣赏那一垄垄翠绿的茶叶及在其间追打嬉戏的狗，只需眺望烟雾缭绕的群山，只需注视头带斗笠用纤纤细手采茶的茶农，在清明前将今年的新茶寄往远方关心我的和我关心的亲朋，生活该是何等惬意？可惜这只是乌托邦。老婆老板老总们终究会把我从丰满的理想拉回骨感的现实，白菜房子汽油是不是又涨了?方案是不是完善了?再不加班项目是不是会延期了?</p>
</div>
<div style="font-family: Arial;">
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;善于总结的网友们流行这样说， 很多男人都是这样的：开始时你会觉得他还不错，只是有点儿childish（孩子气）；相处久了，发现其实他那是selfish（自私鬼）；得再过几年才会明白，他根本就是rubbish（乐色男）。 感谢我的妻子，在察觉到了事实的真相后依然不离不弃，感谢她在这7年时光里时时提醒我不要沉迷在自己一个人的世界，感谢她不断校正我前进的方向，感谢她对我各种任性的包容。</p>
</div>
<div style="font-family: Arial;">
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;“Years passed, kids came, good times, hard times , but never bad times.”jobs在结婚20周年的时候如是写到。现在正是到了艰难的时刻，繁忙的工作让我无法找到家庭与事业的平衡点。听老婆一遍遍计算我们每个星期能真正相处的时间，我知道我应该做点什么。人生不如意事十之八九，也希望老婆听听林清玄同学的那句“常想一二”，不认识jobs不认识林清玄没关系，我们都在阿里系，马云说“今天很残酷，明天更残酷，后天很美好”，远没有到糟糕的时候，远没有到看不到希望的时候不是吗？</p>
</div>
<div style="font-family: Arial;">
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;也许有一天，我们有能力也有心境抛开一切，或驾一辆够霸气的车，越过每一位匍匐前进的虔诚朝圣者，游历在通往羊卓雍措的路上，或在某个如画的景区开一间小旅馆，善待每一位光顾的客人，过着坚强安静不慌不忙的生活。</p>
</div>
<div style="font-family: Arial;">
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;我不会忘记某年某月某天某人系着围裙在厨房忙碌时说五一的时候会给我做绝味土豆吃，直到昨天它终于兑现了，很美味，谢谢。</p>
</div>
<div style="font-family: Arial;"><img title="wKgBtE-jiND3sBIYAAF-43jzon428.groupinfo.w600.jpeg" src="http://www.lovelin.info/wp-content/uploads/2012/05/wKgBtE-jiND3sBIYAAF-43jzon428.groupinfo.w600.jpeg" border="0" alt="WKgBtE jiND3sBIYAAF 43jzon428 groupinfo w600" width="600" height="387" /></div>
</div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一行命令review代码变更]]></title>
    <link href="http://www.lovelin.info/blog/2012/04/26/e4b880e8a18ce591bde4bba4reviewe4bba3e7a081e58f98e69bb4/"/>
    <updated>2012-04-26T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/04/26/e4b880e8a18ce591bde4bba4reviewe4bba3e7a081e58f98e69bb4</id>
    <content type="html"><![CDATA[<p><p style="font-size: 15px;">我觉得用命令行的最大好处之一是可以像影碟一样录好后重放无数次.</p>
<p style="font-size: 15px;">每天的工作中，做code review是经常遇到的事情，怎样快速显示本分支的SVN变更.</p>
<p style="font-size: 15px;">尝试了几次后，如下一句即可，在此备忘下。</p>
<p style="font-size: 15px;">
[cc lang=&#8221;python&#8221;]svn di -r `svn log -v &#8211;stop-on-copy | grep -B4 &#8220;svn copy&#8221; | head -1 | awk &#8216;{print substr($1, 2)}&#8217;`:HEAD[/cc]</p>
<p style="font-size: 15px;">做成alias或者写一句脚本，此后的review不用再每次找版本号找半天了.</p>
<p style="font-size: 15px;">PS: 什么是HEAD?</p>
<p style="font-size: 15px;">见<a href="http://en.wikipedia.org/wiki/Revision_control#Common_vocabulary">http://en.wikipedia.org/wiki/Revision_control#Common_vocabulary</a></p>
<p style="font-size: 15px;"> </p>
<p style="font-size: 15px;"> </p>
<p> </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[健康很重要－cron+growl来提醒我喝水]]></title>
    <link href="http://www.lovelin.info/blog/2012/04/06/e581a5e5bab7e5be88e9878de8a681efbc8dcrongrowle69da5e68f90e98692e68891e5969de6b0b4/"/>
    <updated>2012-04-06T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/04/06/e581a5e5bab7e5be88e9878de8a681efbc8dcrongrowle69da5e68f90e98692e68891e5969de6b0b4</id>
    <content type="html"><![CDATA[<p><h1 style="font-size: 14px;">背景</h1>
<p style="font-size: 14px;"><span style="font-size: 15px;">身为一名programmer，沉浸在自己的代码世界忽略其他是常有的事情。“山中无甲子,寒尽不知年”，猛一回头一个下午又过去了，今天又忘记喝水了，脸色又黄又油，小名都快由黑皮改为黄皮了，晚上回家被狠P了几句。</span></p>
<p style="font-size: 14px;">我需要一个助理，定时提醒我喝水，cron是UNIX世界的贴心管家，他总是准时按你的吩咐做事情。MAC下cron当然存在，但是没有了dbus notification，我们的管家叫哪位下人来通知我喝水呢？答案是growl.</p>
<h1 style="font-size: 14px;"></h1>
<h1 style="font-size: 14px;">执行</h1>
<p><span style="font-size: 15px;">我本机的growl的version是1.3.3，是自己download了源码compile出来的。默认安装时是没有装上growl notify工具的，所以第一步是准备好我们的growl notify.进入growl源码目录，growlnotify工具在 源码目录/Extras/growlnotify目录下，果断执行：</span></p>
[cc lang=&#8221;python&#8221;]<br />
make<br />
sudo make install<br />
[/cc]
<p style="font-size: 15px;">接下来再写个cron表达式，与linux下不同，在MAC下我试了好久都无法以crontab -e的方式加入表达式，最后直接编辑/etc/crontab文件，append如下内容</p>
[cc lang=&#8221;python&#8221;]<br />
0 10,15 * * * penggaojian /usr/local/bin/growlnotify -t &#8220;喝水啦&#8221; -m &#8220;`date` 到了&#8221; -s<br />
[/cc]
<p style="font-size: 15px;">效果就是每天的10点和15点，会pop一个提示窗出来. &#8220;-s&#8221;参数决定了如果我不手工关掉这个提醒，它就和我耗着不自动消失</p>
<p style="font-size: 15px;">搞定，收工。最终效果如图:</p>
<p style="font-size: 15px;"><img title="pop.jpg" src="http://www.lovelin.info/wp-content/uploads/2012/04/pop.jpg" border="0" alt="Pop" width="600" height="375" /></p>
<p style="font-size: 15px;">为什么是10点和15点？这是老婆她五舅这位营养师说的</p>
<p> </p>
<p> </p>
<p> </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[换个GTD－wunderlist试用]]></title>
    <link href="http://www.lovelin.info/blog/2012/03/29/e68da2e4b8aagtdefbc8dwunderliste8af95e794a8/"/>
    <updated>2012-03-29T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/03/29/e68da2e4b8aagtdefbc8dwunderliste8af95e794a8</id>
    <content type="html"><![CDATA[<p><div style="font-size: 16px;">对于我这种做事拖拉，并且无数想法间隙性从脑中涌现的人来说，GTD和笔记软件是不能少的。GTD一直以来都用着things,但是始终没找到android下的客户端，今天终于感觉到不爽了。比较N久，终于决定下个<a href="http://www.wunderlist.com/" title="wunderlist" target="_blank">wunderlist</a>来试用一下。</div>
<div style="font-size: 16px;"></div>
<div style="font-size: 16px;">选中wunderlist有如下原因：</div>
<div><ol>
<li><span style="font-size: 16px;">有android客户端，电脑手机一个都不能少</span></li>
<li><span style="font-size: 16px;">支持云端存储同步</span></li>
<li><span style="font-size: 16px;">Free!</span></li>
</ol>
<p> </p>
<p style="font-size: 18px;">总体感觉和things差不多，用list取代了things的project和area功能，与things相比，少了tag的概念</p>
<p style="font-size: 18px;"><img title="wunderlist.jpg" src="http://www.lovelin.info/wp-content/uploads/2012/03/wunderlist.jpg" border="0" alt="Wunderlist" width="600" height="376" /></p>
<p style="font-size: 18px;"><img title="desktop.jpg" src="http://www.lovelin.info/wp-content/uploads/2012/03/desktop1.jpg" border="0" alt="Desktop" width="600" height="375" /></p>
<p style="font-size: 18px;">附上原things的截图，方便对比</p>
<p style="font-size: 18px;"><img title="things.jpg" src="http://www.lovelin.info/wp-content/uploads/2012/03/things.jpg" border="0" alt="Things" width="600" height="411" /></p>
</div></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[又一位友人离去]]></title>
    <link href="http://www.lovelin.info/blog/2012/03/27/e58f88e4b880e4bd8de58f8be4babae7a6bbe58ebb/"/>
    <updated>2012-03-27T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/03/27/e58f88e4b880e4bd8de58f8be4babae7a6bbe58ebb</id>
    <content type="html"><![CDATA[<p><p> </p>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="font-family: Arial;">想起之前EDM的日子，你常常说要有颗大心脏，想不到你自己却倒在了阿喀琉斯之踵下。</span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="font-family: Arial;"><br /></span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="font-family: Arial;">“益者三友，友直友谅友多闻”，董董面面俱全。</span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="font-family: Arial;"><br /></span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="font-family: Arial;">
</span><div style="font-size: 17px; font-family: 'Heiti SC';">2年前，一根瘦竹竿，抱着台MBP成天在三楼和四楼间窜来窜去，我的阿里生涯由董导师拉开序幕－－－那么可以说，它拥有一个美好的开头。</div>
<br />
<div style="font-size: 17px; font-family: 'Heiti SC';">现在，一封邮件，故人远去，不得不感叹 &#8220;且夫天地为炉兮，造化为工！阴阳为炭兮，万物为铜！&#8221;。</div>
<br />
<div style="font-size: 17px;">又想起《双城记》中的那句话：</div>
<span style="color: #232323;">&#8220;</span><span style="color: #232323;">It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness&#8230;&#8221;</span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="color: #232323; font-family: Verdana, Geneva, sans-serif;"><br /></span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="color: #232323; font-family: Verdana, Geneva, sans-serif;">相信未来。</span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="color: #232323; font-family: Verdana, Geneva, sans-serif;">相信董董有更好的未来。</span></div>
<div style="font-size: 17px; font-family: 'Heiti SC';"><span style="color: #232323; font-family: Verdana, Geneva, sans-serif;"><a title="View '送别' on Flickr.com" href="http://www.flickr.com/photos/76656507@N08/6876942914"><img title="送别" src="http://farm8.staticflickr.com/7241/6876942914_12387e689c_m.jpg" border="0" alt="送别" width="240" height="172" /></a></span></div>
<p> </p>
<p> </p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分析日志获取任务运行时长]]></title>
    <link href="http://www.lovelin.info/blog/2012/03/24/e58886e69e90e697a5e5bf97e88eb7e58f96e4bbbbe58aa1e8bf90e8a18ce697b6e995bf/"/>
    <updated>2012-03-24T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/03/24/e58886e69e90e697a5e5bf97e88eb7e58f96e4bbbbe58aa1e8bf90e8a18ce697b6e995bf</id>
    <content type="html"><![CDATA[<p>最近在做后台计算这块逻辑，所有的计算任务都在后台的线程池中运行。运行完所有任务后，如果统计每个任务的运行时长？所有任务的开始和结束都有打印日志（如下所示），只需要简单解析下日志文件即可。
<code>cat p4pnmas.log | grep task</code>
<a href="http://www.lovelin.info/wp-content/uploads/2012/03/Screen-Shot-2012-03-24-at-4.02.11-PM.png"><img src="http://www.lovelin.info/wp-content/uploads/2012/03/Screen-Shot-2012-03-24-at-4.02.11-PM.png" alt="" title="Screen Shot 2012-03-24 at 4.02.11 PM" width="795" height="38" class="alignnone size-full wp-image-159" /></a></p>

<p>我的第一念头是awk大法,步骤如下
<ul>	
<li>筛选出我感兴趣的标识任务启始结束的记录</li>
	<li>两两合并</li>
	<li>分析每行的两个时间戳，计算秒差</li></ul></p>

<p></p>

<p>于是写出如下句子
<code>awk '{if(match($0, /(task received|task completed)/))print}' p4pnmas.log <br />
|awk '{if(NR%2==1)printf("\n")}{printf "%s ", $0}END{printf("\n")}' <br />
|awk '{split($2,start,":");split($13,end,":");second=0;second+=int((end[1] - start[1]) * 3600);secode+=int((end[2] - start[2])*60);secode+=int(substr(end[3],1,2)-substr(start[3],1,2));print $11,second, int(substr(end[3],1,2)-substr(start[3],1,2)),"\n", $2, $13}'</code></p>

<p>写完后才发现有如下问题：
<ul>	
<li>多线程时，相邻的两行并不一定是某条任务的开始和结束</li>
<li>任务中途出现问题，并没有正常结束，于是后面的全部错位</li>
</ul></p>

<p>不想再伤脑筋用awk解决如上问题，果断python,拥有丰富的库，语法简单明了。python是在JAVA之余，我最喜欢用的脚本语言之一。<br />
思路如下：
<ul>	
<li>用map来保存中间状态，key为某条任务的标识</li>
<li>开始按条解析任务</li>
<li>如果分析出是某条任务的开始，以任务ID为key,时间戳为value,将元素放入map</li>
<li>如果分析出是某条任务的结束，在map中找到此任务的开始时间，如果没找到，打印error,如果找到，计算时间差，写入结果文件，从map中删除该元素</li>
	<li>分析完后，还剩在map中的元素为有头无尾的任务，打印error</li>
</ul></p>

<p>果然能正确分析出来所有的任务，因为分析时间比较长，觉得好玩再为其加上了一个console进度条<br />
整个程序如下：<br />
[cc lang=&#8221;python&#8221;]<br />
#!/usr/bin/python</p>

<p>import re<br />
import time<br />
import datetime<br />
import sys<br />
import os<br />
from progressbar import *</p>

<p>format=&#8221;%Y-%m-%d %H:%M:%S&#8221;<br />
startPattern = re.compile(&#8220;^(.*?),.*?task received, custId=(.*?)$&#8221;)<br />
endPattern = re.compile(&#8220;^(.*?),.*?task completed, custId=(.*?)$&#8221;)<br />
stack = {}</p>

<p>def printInfo(msg):<br />
    now = time.strftime(format,time.localtime(time.time()))<br />
    print &#8220;%s: %s&#8221; % (now, msg)</p>

<p>printInfo(&#8220;prepare to start&#8221;)</p>

<p>input = open(&#8220;p4pnmas.log&#8221;, &#8220;r&#8221;)<br />
ret = open(&#8220;ret&#8221;, &#8220;w&#8221;)</p>

<p>totalCount = 0<br />
for line in input:<br />
    totalCount += 1</p>

<p>count = 0<br />
widgets = [&#8216;Progress: &#8216;, Percentage(), &#8217; &#8216;, Bar(marker=RotatingMarker(&#8216;>-=&#8217;)),<br />
                   &#8217; &#8216;, ETA(), &#8217; &#8216;, Counter()]<br />
pbar = ProgressBar(widgets=widgets, maxval=totalCount).start()</p>

<p>printInfo(&#8220;start&#8221;)<br />
input.seek(0)<br />
for line in input:<br />
    count += 1<br />
    if count % 1000 == 0:<br />
        pbar.update(count)<br />
    m = startPattern.search(line)<br />
    if not m:<br />
        m = endPattern.search(line)<br />
        if not m:<br />
            continue<br />
        custId = m.group(2)<br />
        if not stack.has_key(custId):<br />
            print &#8220;unknown start time , custId=%s&#8221; % custId<br />
            continue<br />
        start=datetime.datetime.strptime(stack[custId],format)<br />
        end=datetime.datetime.strptime(m.group(1),format)<br />
        ret.write(&#8220;%s,%d\n&#8221; % (custId, (end-start).seconds))<br />
        del stack[custId]<br />
        continue<br />
    stack[m.group(2)] = m.group(1)<br />
pbar.finish()</p>

<p>if len(stack) > 0 :<br />
    print &#8220;the following cust has uncompleted:&#8221;<br />
    for key in stack.keys():<br />
        print key<br />
    <br />
input.close()<br />
ret.close()<br />
printInfo(&#8220;end&#8221;)<br />
[/cc]</p>

<p>运行效果如下图：
<a href="http://www.lovelin.info/wp-content/uploads/2012/03/Screen-Shot-2012-03-24-at-4.36.58-PM.png"><img src="http://www.lovelin.info/wp-content/uploads/2012/03/Screen-Shot-2012-03-24-at-4.36.58-PM.png" alt="" title="Screen Shot 2012-03-24 at 4.36.58 PM" width="597" height="75" class="alignnone size-full wp-image-175" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pythonchallenge专题－4]]></title>
    <link href="http://www.lovelin.info/blog/2012/01/31/pythonchallengee4b893e9a298efbc8d4/"/>
    <updated>2012-01-31T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/01/31/pythonchallengee4b893e9a298efbc8d4</id>
    <content type="html"><![CDATA[<p><p>第4题地址 <a href="http://www.pythonchallenge.com/pc/def/equality.html" title="http://www.pythonchallenge.com/pc/def/equality.html">http://www.pythonchallenge.com/pc/def/equality.html</a></p></p>

<p><p>正如晓兵哥的口头禅所言，这道题中的5支蜡烛“闪瞎了我的一双钛合金狗眼”。<br />
读了好几遍题目，终于有点感觉了，意思是一个小写字母两边站3个大写字母，找出符合这种模式的字母即可,这时才发现页面中这张图片太贴切了。</p></p>

<p><p>字母呢？在html source code中！<br />
老办法，将源文件中的相关内容copy成一个文件&#8221;4-source.txt&#8221;
<a href="http://www.lovelin.info/wp-content/uploads/2012/01/Screen-Shot-2012-01-31-at-7.38.37-PM.png"><img src="http://www.lovelin.info/wp-content/uploads/2012/01/Screen-Shot-2012-01-31-at-7.38.37-PM.png" alt="" title="Screen Shot 2012-01-31 at 7.38.37 PM" width="677" height="276" class="alignnone size-full wp-image-140" /></a></p></p>

<p><p>祭起正则表达式，最终的代码如下<br />
[cc lang=&#8221;python&#8221;]<br />
import re<br />
f = open(&#8220;4-source.txt&#8221;, &#8220;r&#8221;)<br />
text = f.read()<br />
p = re.compile(&#8216;[^A-Z][A-Z]{3}[a-z][A-Z]{3}[^A-Z]&#8217;)<br />
list = p.findall(text) <br />
print &#8220;&#8221;.join([letters[4:5] for letters in list])<br />
f.close()<br />
[/cc]</p></p>

<p><p>中间有两次调整：<br />
1. 开始构造的pattern是&#8221;[A-Z]{3}[a-z][A-Z]{3}&#8221;,发现拿到的结果非常混乱，最后检查题目发现没有注意到
<a href="http://www.lovelin.info/wp-content/uploads/2012/01/Screen-Shot-2012-01-31-at-7.43.03-PM.png"><img src="http://www.lovelin.info/wp-content/uploads/2012/01/Screen-Shot-2012-01-31-at-7.43.03-PM.png" alt="" title="Screen Shot 2012-01-31 at 7.43.03 PM" width="616" height="26" class="alignnone size-full wp-image-141" /></a>
中的那个用大写来强调的单词&#8221;EXACTLY&#8221;.后面才改成了&#8221;[^A-Z][A-Z]{3}[a-z][A-Z]{3}[^A-Z]&#8221;</p></p>

<p><p>2.拿到的结果需要取出中间那个小写字母，连起来组成了一个单词&#8221;linkedlist&#8221;<br />
over.</p>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pythonchallenge专题－3]]></title>
    <link href="http://www.lovelin.info/blog/2012/01/05/pythonchallengee4b893e9a298efbc8d3/"/>
    <updated>2012-01-05T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/01/05/pythonchallengee4b893e9a298efbc8d3</id>
    <content type="html"><![CDATA[<p>第3题地址<a href="http://www.pythonchallenge.com/pc/def/ocr.html" title="http://www.pythonchallenge.com/pc/def/ocr.html" target="_blank">http://www.pythonchallenge.com/pc/def/ocr.html</a>。<br />
不得不说这个URL非常巧妙，上一题是一个字母mapping相关的，URL中带上&#8221;map&#8221;做为题目的主题，&#8221;map&#8221;映射为&#8221;ocr&#8221;做为结果，而这一题看起来是图像识别相关的，所以&#8221;ocr&#8221;则可以成为本题的主题了。</p>

<p>看到这句话<br />
[cc lang=&#8221;bash&#8221;]recognize the characters. maybe they are in the book,<br />
but MAYBE they are in the page source.<br />
[/cc]<br />
知道玄机不在图片中，而在html源码中，于是打开页面源码，果然看到有提示<br />
[cc lang=&#8221;javascript&#8221;]
<!--<br>
find rare characters in the mess below:<br>
&#8211;></p>

<p><!--<br>
%%$@_$^__#)^)&!_+]!*@&^}@[@%]()%+$&[(_@%+%$*^@$^!+]!&_#)_*}{}}!}_]$[%}@[{_@#_^{*<br>
@##&{#&{&)*%(]{{([*}@[@&]+!!*{)!}{%+{))])[!^})+)$]#{*+^((@^@}$[**$&^{$!@#$%)!@(&<br>
&#8230;<br>
&#8211;>
[/cc]<br />
看来是需要从这段火星文中找出所有的字母就OK了。</p>

<p>将这段COPY出来，保存为一个文件&#8221;3-source.txt&#8221;，用python做如下运算<br />
[cc lang=&#8221;python&#8221;]<br />
import string</p>

<p>file = open(&#8220;3-source.txt&#8221;, &#8220;r&#8221;)<br />
ret = [char for char in file.read() if char in string.letters]<br />
print &#8220;&#8221;.join(ret)<br />
file.close()<br />
[/cc]</p>

<p>算得结果为“equality”，将此单词替换URL中的“ocr”,进入下一题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pythonchallenge专题－2]]></title>
    <link href="http://www.lovelin.info/blog/2012/01/02/pythonchallengee4b893e9a298efbc8d2/"/>
    <updated>2012-01-02T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/01/02/pythonchallengee4b893e9a298efbc8d2</id>
    <content type="html"><![CDATA[<p>第2题地址<a href="http://www.pythonchallenge.com/pc/def/map.html" title="http://www.pythonchallenge.com/pc/def/map.html" target="_blank">http://www.pythonchallenge.com/pc/def/map.html</a></p>

<p>根据图片提示，可以判断这是一个简单的解密算法，将每个字母mapping到它的ascii值加2代表的字母就可以了。<br />
于是第一版本出来了<br />
[cc lang=&#8221;python&#8221;]<br />
str = &#8220;g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr&#8217;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.&#8221;</p>

<p>convertFun = lambda x : chr((ord(x) - 95) % 26 + 97)</p>

<p>plainStr = []<br />
for char in str:<br />
    if not (96 < ord(char) < 123):<br />
        plainStr.append(char)<br />
    else:<br />
        plainStr.append(convertFun(char))<br />
print &#8220;&#8221;.join(plainStr)</p>

<p>[/cc]<br />
期间发现翻译出来的文字还是有点问题，并不是之前想的ascii+2就可以了，而是一个头尾相连的环。比如字母&#8221;y&#8221;需要映射到字母&#8221;a&#8221;才正确。<br />
解密出来的结果是如下一段文字：<br />
[cc lang=&#8221;bash&#8221;]<br />
i hope you didnt translate it by hand. thats what computers are for. doing it in by hand is inefficient and that&#8217;s why this text is so long. using string.maketrans() is recommended. now apply on the url.<br />
[/cc]<br />
很显然，这暴露了我是一个python初学者，我根本不知道还有string.maketrans这样的现有的trans功能。<br />
查了下资料后，第2版的代码如下：<br />
[cc lang=&#8221;python&#8221;]<br />
import string</p>

<p>str = &#8220;g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr&#8217;q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj.&#8221;</p>

<p>table = string.maketrans(&#8220;abcdefghijklmnopqrstuvwxyz&#8221;, &#8220;cdefghijklmnopqrstuvwxyzab&#8221;)<br />
print string.translate(str, table)<br />
[/cc]<br />
打印出来的结果与上面的是一样的，不过代码就精简了很多了。<br />
现在的问题在于，我怎样才能进入下一关？？？像第一题一样把这段文字拷到url中替换某个关键词(map)，发现并不正确。<br />
根据提示将整个URL塞到解密函数中，“http”都转义了，明显也不对。<br />
无头苍蝇般瞎折腾了N久后，终于发现只将&#8221;map&#8221;这个关键词做一下mapping,得到&#8221;ocr&#8221;,将&#8221;ocr&#8221;替换掉&#8221;map&#8221;,进入下一题。</p>

<p>PS:<br />
如果不用python,直接在shell下用tr,更简单
<a href="http://www.lovelin.info/wp-content/uploads/2012/01/Screen-Shot-2012-01-02-at-10.54.16-AM.png"><img src="http://www.lovelin.info/wp-content/uploads/2012/01/Screen-Shot-2012-01-02-at-10.54.16-AM.png" alt="" title="tr result" width="652" height="131" class="alignnone size-full wp-image-110" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[pythonchallenge专题－1]]></title>
    <link href="http://www.lovelin.info/blog/2012/01/01/pythonchallengee4b893e9a298efbc8d1/"/>
    <updated>2012-01-01T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2012/01/01/pythonchallengee4b893e9a298efbc8d1</id>
    <content type="html"><![CDATA[<p><a href="http://www.pythonchallenge.com/" title="pythonchallenge" target="_blank">pythonchallenge</a>听过很多次，今天决定开始试试.</p>

<p>打开<a href="http://www.pythonchallenge.com" title="www.pythonchallenge.com" target="_blank">www.pythonchallenge.com</a>，引导进入第一题。<br />
题目非常简单，求2的38次方<br />
直接<br />
[cc lang=&#8221;python&#8221;]<br />
print 2 ** 38<br />
[/cc]<br />
或
[cc lang=&#8221;python&#8221;]<br />
print 2 << 37<br />
[/cc]<br />
根据页面提示<br />
“Hint: try to change the URL address.”<br />
将算得的值替换进url中，进入下一题。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在mac上安装mtr]]></title>
    <link href="http://www.lovelin.info/blog/2011/12/31/e59ca8mace4b88ae5ae89e8a385mtr/"/>
    <updated>2011-12-31T00:00:00+08:00</updated>
    <id>http://www.lovelin.info/blog/2011/12/31/e59ca8mace4b88ae5ae89e8a385mtr</id>
    <content type="html"><![CDATA[<p>不得不说MAC下某些命令与常见的linux发行版中的命令大不一样。ps, sed 我忍很久了。</p>

<p>这次又发现没有<a href="http://www.bitwizard.nl/mtr/" title="mtr">mtr</a>工具，还好装了brew，于是
<a href="http://www.lovelin.info/wp-content/uploads/2011/12/Screen-Shot-2011-12-31-at-3.25.54-PM.png"><img src="http://www.lovelin.info/wp-content/uploads/2011/12/Screen-Shot-2011-12-31-at-3.25.54-PM.png" alt="" title="mtr install" width="678" height="78" class="alignnone size-full wp-image-90" /></a>
发现居然莫名地开始下载gtk+??</p>

<p>于是，决定挽袖子自己compile一个<br />
1.download并解压缩<br />
[cc lang=&#8221;bash&#8221;]<br />
wget ftp://ftp.bitwizard.nl/mtr/mtr-0.82.tar.gz<br />
tar xzvf mtr-0.82.tar.gz<br />
[/cc]<br />
2.编译<br />
[cc lang=&#8221;bash&#8221;]<br />
cd mtr-0.82<br />
./configure<br />
make<br />
sudo make install<br />
[/cc]<br />
发现装到/usr/local/bin/sbin下面去了。忘记configure时做prefix了<br />
3.此目录不在我的PATH范围内，所以在~/.profile文件中加入一句<br />
[cc lang=&#8221;bash&#8221;]<br />
echo &#8216;export PATH=/usr/local/bin/sbin:$PATH&#8217; >> ~/.profile<br />
source !$<br />
[/cc]<br />
4.使用<br />
[cc lang=&#8221;bash&#8221;]<br />
mtr www.alibaba.com<br />
[/cc]<br />
结果：
<a href="http://www.lovelin.info/wp-content/uploads/2011/12/Screen-Shot-2011-12-31-at-3.20.13-PM.png"><img src="http://www.lovelin.info/wp-content/uploads/2011/12/Screen-Shot-2011-12-31-at-3.20.13-PM.png" alt="" title="mtr result" width="639" height="240" class="alignnone size-full wp-image-94" /></a></p>

<p>PS：<br />
如果出现如下错误
<a href="http://www.lovelin.info/wp-content/uploads/2011/12/Screen-Shot-2012-01-02-at-9.36.30-AM.png"><img src="http://www.lovelin.info/wp-content/uploads/2011/12/Screen-Shot-2012-01-02-at-9.36.30-AM.png" alt="" title="mtr compile error" width="417" height="224" class="alignnone size-full wp-image-102" /></a>
先<br />
[cc lang=&#8221;bash&#8221;]<br />
export LIBS=&#8217;-lm -ltermcap -lresolv&#8217;<br />
[/cc]<br />
再执行编译即可</p>
]]></content>
  </entry>
  
</feed>
